{"version":3,"file":"DTransactionTimeline.stories-4d03cdbc.js","sources":["../../src/d-transaction-timeline/DTransactionTimeline.vue"],"sourcesContent":["<template>\n  <d-box\n    class=\"ui-transaction-timeline\"\n    :style=\"{\n      '--spacing': spacing,\n      '--indicator-size': indicatorSize,\n      '--indicator-color': activeColorSpectrum['500'],\n      '--indicator-color-border': activeColorSpectrum['200'],\n      '--indicator-color-bg': activeColorSpectrum['100'],\n      '--indicator-inactive-color': activeColorSpectrum['300'],\n    }\"\n    :class=\"{ [scheme]: scheme }\"\n  >\n    <d-box\n      v-for=\"(step, index) in timeline\"\n      :key=\"`step-${index}`\"\n      class=\"ui-step\"\n      :class=\"{\n        inactive: stepStatus(step) === 'inactive',\n        completed: stepStatus(step) === 'completed',\n        active: stepStatus(step) === 'active',\n        successful: stepStatus(step) === 'successful',\n        failed: stepStatus(step) === 'failed',\n        pending: stepStatus(step) === 'pending',\n        last: index === timeline.length - 1,\n        dotted:\n          index !== timeline.length - 1\n            ? stepStatus(timeline[index + 1]) === 'inactive'\n            : false,\n        [scheme]: scheme,\n      }\"\n    >\n      <slot\n        name=\"step-indicator\"\n        v-bind=\"typeof step === 'object' ? step : { step: step }\"\n      >\n        <d-box\n          class=\"ui-step__indicator\"\n          :class=\"{\n            inactive: stepStatus(step) === 'inactive',\n            completed: stepStatus(step) === 'completed',\n            active: stepStatus(step) === 'active',\n            successful: stepStatus(step) === 'successful',\n            failed: stepStatus(step) === 'failed',\n            pending: stepStatus(step) === 'pending',\n            last: index === timeline.length - 1,\n            [scheme]: scheme,\n            activeColor,\n          }\"\n        >\n          <check-outline-icon\n            class=\"indicator-icon\"\n            v-if=\"\n              stepStatus(step) === 'completed' ||\n              stepStatus(step) === 'successful'\n            \"\n          />\n          <close-icon\n            class=\"indicator-icon\"\n            v-if=\"stepStatus(step) === 'failed'\"\n          />\n          <clock-filled-icon\n            class=\"indicator-icon\"\n            v-if=\"stepStatus(step) === 'pending'\"\n          />\n        </d-box>\n      </slot>\n\n      <d-box class=\"ui-step__content\">\n        <slot name=\"step\" v-bind=\"typeof step === 'object' ? step : {}\">\n          <d-text\n            class=\"ui-step__content-title\"\n            margin-bottom=\"4px\"\n            margin-top=\"0\"\n            :font-size=\"fontSize\"\n            >{{ typeof step === \"string\" ? step : step.text }}</d-text\n          >\n          <d-text\n            margin-y=\"0\"\n            scale=\"footnote\"\n            v-if=\"typeof step !== 'string' && step.description\"\n            color=\"#878B9A\"\n            font-weight=\"450\"\n            v-html=\"step.description\"\n          >\n          </d-text>\n        </slot>\n      </d-box>\n    </d-box>\n  </d-box>\n</template>\n\n<script setup>\nimport {\n  DBox,\n  DText,\n  CheckOutlineIcon,\n  CloseIcon,\n  ClockFilledIcon,\n} from \"../main\";\nimport { generateColorSpectrum } from \"@/utils/colorManager\";\nimport { computed } from \"vue\";\n\nconst props = defineProps({\n  timeline: {\n    type: Array,\n  },\n  fontSize: {\n    type: String,\n    default: \"14px\",\n  },\n  spacing: {\n    type: String,\n    default: \"50px\",\n  },\n  indicatorSize: {\n    type: String,\n    default: \"20px\",\n  },\n  scheme: {\n    type: String,\n    validator: (value) => [\"variant-1\", \"variant-2\"].includes(value),\n    default: \"variant-1\",\n  },\n  activeColor: {\n    type: String,\n    default: \"#2A2E33\",\n  },\n  stepMode: {\n    type: Boolean,\n    default: true,\n  },\n  hideTicks: {\n    type: Boolean,\n    default: false,\n  },\n});\n\nconst activeColorSpectrum = computed(() =>\n  generateColorSpectrum(props.activeColor, \"\")\n);\n\nconst validStatuses = [\n  \"active\",\n  \"inactive\",\n  \"failed\",\n  \"successful\",\n  \"pending\",\n  \"completed\",\n];\n\nconst stepStatus = (step) => {\n  if (step.status) {\n    if (validStatuses.includes(step.status)) {\n      return step.status;\n    } else {\n      return \"inactive\";\n    }\n  }\n  return \"inactive\";\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.ui-transaction-timeline {\n  display: flex;\n  flex-direction: column;\n  .ui-step {\n    display: inline-flex;\n    align-items: flex-start;\n    padding-bottom: 30px;\n    min-height: var(--spacing);\n    position: relative;\n\n    &.inactive {\n      .ui-text.ui-step__content-title {\n        color: #6d7786;\n      }\n    }\n\n    &.successful {\n      .ui-text.ui-step__content-title {\n        color: #00b058;\n      }\n    }\n\n    &.failed {\n      .ui-text.ui-step__content-title {\n        color: #d62f4b;\n      }\n    }\n\n    &.pending {\n      .ui-text.ui-step__content-title {\n        color: #6d7786;\n      }\n    }\n\n    &:not(.last) {\n      &::after {\n        content: \"\";\n        height: calc(100% - var(--indicator-size) - 16px);\n        width: 1px;\n        background: #00b058;\n        left: calc((var(--indicator-size) / 2 - 1px));\n        top: calc(var(--indicator-size) + 8px);\n        position: absolute;\n      }\n      &.dotted {\n        &::after {\n          background: repeating-linear-gradient(\n            to bottom,\n            #e1e7ec 0px 3px,\n            transparent 6px 9px\n          );\n        }\n      }\n      &.variant-2 {\n        &::after {\n          background: repeating-linear-gradient(\n            to bottom,\n            #e1e7ec 0px 3px,\n            transparent 6px 9px\n          );\n        }\n        &.dark_mode::after {\n          background: repeating-linear-gradient(\n            to bottom,\n            #202b3c 0px 3px,\n            transparent 6px 9px\n          );\n        }\n      }\n      &.dark_mode {\n        &::after {\n          background: #202b3c;\n        }\n      }\n    }\n    .ui-step__indicator {\n      display: inline-flex;\n      border: 1.5px solid var(--indicator-color-border);\n      flex-grow: 0;\n      flex-shrink: 0;\n      background: var(--indicator-color-bg);\n      height: var(--indicator-size);\n      width: var(--indicator-size);\n      border-radius: 50%;\n      margin-right: 12px;\n      position: relative;\n      box-sizing: border-box;\n      align-items: center;\n      justify-content: center;\n      z-index: 15;\n\n      .indicator-icon {\n        height: 13px;\n        width: 13px;\n      }\n\n      &.variant-2 {\n        background: var(--indicator-color-bg);\n        border: none;\n        &::before {\n          content: \"\";\n          height: 8px;\n          width: 8px;\n          background: var(--indicator-inactive-color);\n          border-radius: 50%;\n        }\n        &.completed {\n          &::before {\n            display: none;\n          }\n        }\n      }\n      &.dark_mode {\n        background: var(--dark-input-background-color);\n        border-color: var(--dark-primary-800);\n      }\n      &.inactive {\n        &::before {\n          content: \"\";\n          height: 8px;\n          width: 8px;\n          display: flex;\n          border-radius: 50%;\n          background: #b8c4ce;\n        }\n        background: #f5f8fa;\n        border: none;\n      }\n      &.active {\n        &::before {\n          content: \"\";\n          height: 8px;\n          width: 8px;\n          display: flex;\n          border-radius: 50%;\n          background: #00b058;\n        }\n        background: #dff6ee;\n        border: none;\n      }\n      &.completed {\n        background: #dff6ee;\n        border: none;\n        color: #00b058;\n      }\n      &.successful {\n        background: #00b058;\n        border: none;\n        color: #fff;\n      }\n      &.failed {\n        background: #d62f4b;\n        border: none;\n        color: #fff;\n      }\n      &.pending {\n        background: #ffb44f;\n        border: none;\n        color: #fff;\n      }\n    }\n    .ui-text.ui-step__content-title {\n      font-weight: 500;\n\n      &.dark_mode {\n        color: #cbd5e1;\n      }\n    }\n  }\n}\n</style>\n"],"names":["activeColorSpectrum","computed","generateColorSpectrum","props","validStatuses","stepStatus","step"],"mappings":"iuBA0IMA,EAAsBC,EAAS,IACnCC,EAAsBC,EAAM,YAAa,EAAE,CAC7C,EAEMC,EAAgB,CACpB,SACA,WACA,SACA,aACA,UACA,WACF,EAEMC,EAAcC,GACdA,EAAK,QACHF,EAAc,SAASE,EAAK,MAAM,EAC7BA,EAAK,OAKT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}