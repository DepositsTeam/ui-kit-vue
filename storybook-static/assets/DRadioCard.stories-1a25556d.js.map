{"version":3,"file":"DRadioCard.stories-1a25556d.js","sources":["../../src/utils/composables/useRadio.js","../../src/d-radio-card/DRadioCard.vue"],"sourcesContent":["import { onMounted, computed, ref, defineEmits } from \"vue\";\n\nexport const useRadio = (props, emit) => {\n  const mounted = ref(false);\n\n  onMounted(() => {\n    mounted.value = true;\n  });\n\n  const computedValue = computed(() =>\n    !props.value ? props.label : props.value\n  );\n\n  const isChecked = computed(() => {\n    if (props.checked !== null) {\n      return props.checked;\n    } else {\n      console.log(\"I got here\", props.modelValue, props.value);\n      if (mounted.value) return props.modelValue === computedValue.value;\n      else return false;\n    }\n  });\n\n  const changed = () => {\n    emit(\"update:modelValue\", computedValue.value);\n  };\n\n  const emitClick = () => {\n    emit(\"click\");\n  };\n\n  return { isChecked, changed, emitClick };\n};\n","<template>\n  <d-box @click=\"changed\" class=\"d-radio-card\">\n    <d-auto-layout gap=\"16px\">\n      <d-box v-if=\"$slots.icon\" class=\"d-radio-card__icon\">\n        <slot name=\"icon\"></slot>\n      </d-box>\n      <d-box class=\"d-radio-card__content\">\n        <slot>\n          <d-heading my0>{{ heading }}</d-heading>\n          <d-text scale=\"subhead\" light-color=\"#8C97A7\" my0>{{\n            description\n          }}</d-text>\n        </slot>\n      </d-box>\n    </d-auto-layout>\n\n    <d-box class=\"d-radio-card__radio\">\n      <d-radio\n        ring-size=\"24px\"\n        :checked=\"isChecked\"\n        ring-thickness=\"8px\"\n        ringed\n      />\n    </d-box>\n  </d-box>\n</template>\n\n<script setup>\nimport { DBox, DHeading, DAutoLayout, DText, DRadio } from \"../main\";\nimport { useRadio } from \"../utils/composables/useRadio\";\nimport { defineEmits } from \"vue\";\n\nconst props = defineProps({\n  heading: {\n    type: String,\n  },\n  description: {\n    type: String,\n  },\n  checked: {\n    type: Boolean,\n    default: null,\n  },\n  value: {\n    type: [String, Number],\n    default: \"\",\n  },\n  modelValue: {\n    default: false,\n  },\n  disabled: {\n    type: Boolean,\n  },\n});\n\nconst emit = defineEmits([\"update:modelValue\", \"click\"]);\n\nconst { isChecked, changed } = useRadio(props, emit);\n</script>\n\n<style lang=\"scss\" scoped>\n.d-radio-card {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 19px 16px;\n  border: 1px solid #e1e7ec;\n  border-radius: 8px;\n  .d-radio-card__icon {\n    border: 1px solid #e1e7ec;\n    display: flex;\n    min-height: 42px;\n    min-width: 42px;\n    padding: 12px;\n    aspect-ratio: 1 / 1;\n    border-radius: 8px;\n    align-items: center;\n    justify-content: center;\n  }\n}\n</style>\n"],"names":["useRadio","__name","props","emit","mounted","ref","onMounted","computedValue","computed","isChecked","changed"],"mappings":"6TAEO,MAAMA,EAAWC,EAAA,CAACC,EAAOC,IAAS,CACvC,MAAMC,EAAUC,EAAI,EAAK,EAEzBC,EAAU,IAAM,CACdF,EAAQ,MAAQ,EACpB,CAAG,EAED,MAAMG,EAAgBC,EAAS,IAC5BN,EAAM,MAAsBA,EAAM,MAApBA,EAAM,KACzB,EAoBE,MAAO,CAAE,UAlBSM,EAAS,IACrBN,EAAM,UAAY,KACbA,EAAM,SAEb,QAAQ,IAAI,aAAcA,EAAM,WAAYA,EAAM,KAAK,EACnDE,EAAQ,MAAcF,EAAM,aAAeK,EAAc,MACjD,GAEf,EAUmB,QARJN,EAAA,IAAM,CACpBE,EAAK,oBAAqBI,EAAc,KAAK,CACjD,EAFkB,WAQa,UAJXN,EAAA,IAAM,CACtBE,EAAK,OAAO,CAChB,EAFoB,aAKpB,EA9BwB,6RCuDlB,CAAE,UAAAM,EAAW,QAAAC,CAAS,EAAGV,EAASE,EAAOC,CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}