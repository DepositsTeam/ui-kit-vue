{"version":3,"file":"DCheckboxCard.stories-330f395a.js","sources":["../../src/d-checkbox-card/DCheckboxCard.vue"],"sourcesContent":["<template>\n  <d-box class=\"d-checkbox-card__wrapper\">\n    <d-text\n      v-if=\"label\"\n      margin-top=\"0px\"\n      class=\"ui-text-field__label\"\n      :class=\"labelClass\"\n      scale=\"subhead\"\n      :font-face=\"labelFontFace\"\n    >\n      {{ label }}\n    </d-text>\n    <d-box @click=\"handleClick\" class=\"d-checkbox-card\">\n      <d-auto-layout justify-content=\"space-between\" align-items=\"center\">\n        <d-auto-layout gap=\"16px\">\n          <d-box\n            align-self=\"center\"\n            v-if=\"$slots.icon\"\n            class=\"d-checkbox-card__icon\"\n          >\n            <slot name=\"icon\"></slot>\n          </d-box>\n          <d-box class=\"d-checkbox-card__content\">\n            <slot name=\"heading\">\n              <d-heading my0>{{ heading }}</d-heading>\n            </slot>\n            <slot name=\"description\">\n              <d-text scale=\"subhead\" light-color=\"#8C97A7\" my0>{{\n                description\n              }}</d-text>\n            </slot>\n          </d-box>\n        </d-auto-layout>\n\n        <d-box class=\"d-checkbox-card__checkbox\">\n          <d-checkbox :dashed=\"dashed\" size=\"18px\" :checked=\"isChecked\" />\n        </d-box>\n      </d-auto-layout>\n      <d-box\n        v-if=\"expandable && expanded\"\n        class=\"d-checkbox-card__expansion-border\"\n      ></d-box>\n\n      <d-box v-if=\"expanded\" class=\"d-checkbox-card__expanded\">\n        <slot></slot>\n      </d-box>\n    </d-box>\n  </d-box>\n</template>\n\n<script setup>\nimport { DBox, DHeading, DAutoLayout, DText, DCheckbox } from \"../main\";\nimport { ref } from \"vue\";\nimport { useCheckbox } from \"../utils/composables/useCheckbox\";\n\nconst expanded = ref(false);\n\nconst props = defineProps({\n  heading: {\n    type: String,\n  },\n  description: {\n    type: String,\n  },\n  checked: {\n    type: Boolean,\n    default: null,\n  },\n  value: {\n    type: [String, Number],\n    default: \"\",\n  },\n  modelValue: {\n    default: false,\n  },\n  trueValue: {\n    default: true,\n  },\n  falseValue: {\n    default: false,\n  },\n  values: {\n    type: Array,\n    default: () => [],\n  },\n  dashed: {\n    type: Boolean,\n  },\n  disabled: {\n    type: Boolean,\n  },\n  expandable: {\n    type: Boolean,\n  },\n  label: {\n    type: String,\n  },\n  labelClass: {\n    type: String,\n  },\n  labelFontFace: {\n    type: String,\n    default: \"heroNew\",\n  },\n});\n\nconst emit = defineEmits([\"update:modelValue\", \"click\"]);\n\nconst { isChecked, triggerChange: changed } = useCheckbox(props, emit);\n\nconst handleClick = (e) => {\n  if (!props.disabled) {\n    if (props.expandable) {\n      // Handle stuff if it's expandable\n      if (e.target.closest(\".d-checkbox-card__checkbox\")) {\n        changed();\n      } else {\n        expanded.value = !expanded.value;\n      }\n    } else {\n      changed();\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.d-checkbox-card {\n  padding: 19px 16px;\n  position: relative;\n  border: 1px solid #e1e7ec;\n  border-radius: 8px;\n  background: white;\n  cursor: pointer;\n  .d-checkbox-card__expansion-border {\n    width: 100%;\n    height: 0.5px;\n    background: #e2e8f0;\n    margin: 16px 0;\n  }\n  .d-checkbox-card__icon {\n    border: 1px solid #e1e7ec;\n    display: flex;\n    min-height: 42px;\n    min-width: 42px;\n    padding: 12px;\n    aspect-ratio: 1 / 1;\n    border-radius: 8px;\n    align-items: center;\n    justify-content: center;\n  }\n}\n</style>\n"],"names":["expanded","ref","isChecked","changed","useCheckbox","props","emit","handleClick","e"],"mappings":"yyBAuDMA,EAAWC,GAAI,EAAK,EAqDpB,CAAE,UAAAC,GAAW,cAAeC,CAAO,EAAKC,GAAYC,EAAOC,EAAI,EAE/DC,GAAeC,GAAM,CACpBH,EAAM,WACLA,EAAM,WAEJG,EAAE,OAAO,QAAQ,4BAA4B,EAC/CL,IAEAH,EAAS,MAAQ,CAACA,EAAS,MAG7BG,IAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}