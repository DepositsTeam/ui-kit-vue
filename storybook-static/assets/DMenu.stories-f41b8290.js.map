{"version":3,"file":"DMenu.stories-f41b8290.js","sources":["../../src/d-menu/MenuOption.js","../../src/d-menu/DMenu.vue"],"sourcesContent":["import uniqueRandomString from \"../utils/uniqueRandomString\";\n\nexport default class MenuOption {\n  constructor(option, optionTitle = \"text\") {\n    if (typeof option === \"string\") {\n      this.text = option;\n      this.uuid = uniqueRandomString(30, 8);\n      this.originalOption = option;\n    } else {\n      const originalOption = { ...option };\n      const {\n        leftIcon = \"\",\n        rightIcon = \"\",\n        href = \"\",\n        to = \"\",\n        textColor = \"\",\n        className = \"\",\n        onClick = undefined,\n        onHover = undefined,\n        ...otherArgs\n      } = option;\n      this.leftIcon = leftIcon;\n      this.rightIcon = rightIcon;\n      this.text = otherArgs[optionTitle];\n      this.href = href;\n      this.to = to;\n      this.textColor = textColor;\n      this.className = className;\n      this.onClick = onClick;\n      this.onHover = onHover;\n      this.uuid = uniqueRandomString(30, 8);\n      this.originalOption = originalOption;\n    }\n  }\n}\n","<template>\n  <d-box class=\"d-context-menu-dropdown-wrapper\">\n    <d-box ref=\"targetRef\" class=\"d-context-menu-dropdown-target\">\n      <slot></slot>\n    </d-box>\n    <d-box ref=\"dropdownRef\" class=\"d-context-menu-dropdown\">\n      <d-box\n        class=\"d-context-menu-dropdown-option\"\n        v-for=\"option in computedOptions\"\n        :key=\"option.uuid\"\n      >\n        <d-text>{{ option.text }}</d-text>\n      </d-box>\n    </d-box>\n  </d-box>\n</template>\n\n<script setup>\nimport { DBox, DText } from \"../main\";\nimport { computed } from \"vue\";\nimport MenuOption from \"./MenuOption\";\n\nconst props = defineProps({\n  options: {\n    type: Array,\n  },\n  optionTitle: {\n    type: String,\n    default: \"text\",\n  },\n  trigger: {\n    type: String,\n    default: \"click\",\n    validator: (value) => [\"click\", \"hover\"].includes(value),\n  },\n});\n\nconst emit = defineEmits([\"option-clicked\"]);\n\nconst computedOptions = computed(() =>\n  [...props.options].map((option) => new MenuOption(option, props.optionTitle))\n);\n</script>\n\n<style lang=\"scss\" scoped>\n.d-context-menu-dropdown {\n  background: white;\n  color: white;\n  padding: 8px;\n  border-radius: 6px;\n  font-weight: 500;\n  max-width: 320px;\n  width: max-content;\n  position: absolute;\n  top: 0;\n  left: 0;\n  &.hidden {\n    display: none;\n  }\n}\n</style>\n"],"names":["MenuOption","option","optionTitle","uniqueRandomString","originalOption","leftIcon","rightIcon","href","to","textColor","className","onClick","onHover","otherArgs","__name","computedOptions","computed","props"],"mappings":"oTAEe,MAAMA,CAAW,CAC9B,YAAYC,EAAQC,EAAc,OAAQ,CACxC,GAAI,OAAOD,GAAW,SACpB,KAAK,KAAOA,EACZ,KAAK,KAAOE,EAAmB,GAAI,CAAC,EACpC,KAAK,eAAiBF,MACjB,CACL,MAAMG,EAAiB,CAAE,GAAGH,GACtB,CACJ,SAAAI,EAAW,GACX,UAAAC,EAAY,GACZ,KAAAC,EAAO,GACP,GAAAC,EAAK,GACL,UAAAC,EAAY,GACZ,UAAAC,EAAY,GACZ,QAAAC,EAAU,OACV,QAAAC,EAAU,OACV,GAAGC,CACJ,EAAGZ,EACJ,KAAK,SAAWI,EAChB,KAAK,UAAYC,EACjB,KAAK,KAAOO,EAAUX,CAAW,EACjC,KAAK,KAAOK,EACZ,KAAK,GAAKC,EACV,KAAK,UAAYC,EACjB,KAAK,UAAYC,EACjB,KAAK,QAAUC,EACf,KAAK,QAAUC,EACf,KAAK,KAAOT,EAAmB,GAAI,CAAC,EACpC,KAAK,eAAiBC,CACvB,CACF,CACH,CAhCqBU,EAAAd,EAAA,kPCqCfe,EAAkBC,EAAS,IAC/B,CAAC,GAAGC,EAAM,OAAO,EAAE,IAAKhB,GAAW,IAAID,EAAWC,EAAQgB,EAAM,WAAW,CAAC,CAC9E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}